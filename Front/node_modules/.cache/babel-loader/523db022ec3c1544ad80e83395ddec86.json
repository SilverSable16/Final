{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Proyecto\\\\Front\\\\src\\\\components\\\\cart\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [reservas, setReservas] = useState([]);\n  const updateCart = items => {\n    try {\n      if (!Array.isArray(items)) {\n        throw new Error(\"El carrito debe ser un array.\");\n      }\n      setCartItems(items);\n      localStorage.setItem('cartItems', JSON.stringify(items));\n    } catch (error) {\n      console.error(\"Error actualizando el carrito:\", error);\n    }\n  };\n  const updateReservas = reservasList => {\n    try {\n      if (!Array.isArray(reservasList)) {\n        throw new Error(\"Las reservas deben ser un array.\");\n      }\n      setReservas(reservasList);\n      localStorage.setItem('reservas', JSON.stringify(reservasList));\n    } catch (error) {\n      console.error(\"Error actualizando las reservas:\", error);\n    }\n  };\n  const addToCart = item => {\n    try {\n      setCartItems(prevCartItems => {\n        const existingItemIndex = prevCartItems.findIndex(cartItem => cartItem.idAlimento === item.idAlimento);\n        let updatedItems;\n        if (existingItemIndex !== -1) {\n          const updatedItem = {\n            ...prevCartItems[existingItemIndex],\n            quantity: prevCartItems[existingItemIndex].quantity + item.quantity\n          };\n          updatedItems = [...prevCartItems.slice(0, existingItemIndex), updatedItem, ...prevCartItems.slice(existingItemIndex + 1)];\n        } else {\n          const newItem = {\n            ...item,\n            quantity: item.quantity\n          };\n          updatedItems = [...prevCartItems, newItem];\n        }\n        updateCart(updatedItems);\n        console.log(\"Item added to cart:\", item);\n        return updatedItems;\n      });\n    } catch (error) {\n      console.error(\"Error agregando al carrito:\", error);\n    }\n  };\n  const removeFromCart = (itemId, quantityToRemove) => {\n    try {\n      setCartItems(prevCartItems => {\n        const updatedItems = prevCartItems.reduce((acc, item) => {\n          if (item.idAlimento === itemId) {\n            const newQuantity = item.quantity - quantityToRemove;\n            if (newQuantity > 0) {\n              acc.push({\n                ...item,\n                quantity: newQuantity\n              });\n            }\n          } else {\n            acc.push(item);\n          }\n          return acc;\n        }, []);\n        updateCart(updatedItems);\n        console.log(\"Item removed from cart:\", itemId);\n        return updatedItems;\n      });\n    } catch (error) {\n      console.error(\"Error eliminando del carrito:\", error);\n    }\n  };\n  const addReserva = reserva => {\n    try {\n      setReservas(prevReservas => {\n        const existingReservaIndex = prevReservas.findIndex(r => r.codigoMesaReserva === reserva.codigoMesaReserva);\n        let updatedReservas;\n        if (existingReservaIndex !== -1) {\n          const updatedReserva = {\n            ...prevReservas[existingReservaIndex],\n            cantidadPersonas: prevReservas[existingReservaIndex].cantidadPersonas + reserva.cantidadPersonas\n          };\n          updatedReservas = [...prevReservas.slice(0, existingReservaIndex), updatedReserva, ...prevReservas.slice(existingReservaIndex + 1)];\n        } else {\n          updatedReservas = [...prevReservas, reserva];\n        }\n        updateReservas(updatedReservas);\n        console.log(\"Reserva aÃ±adida:\", reserva);\n        return updatedReservas;\n      });\n    } catch (error) {\n      console.error(\"Error agregando la reserva:\", error);\n    }\n  };\n  const removeReserva = codigoMesaReserva => {\n    try {\n      setReservas(prevReservas => {\n        const updatedReservas = prevReservas.filter(reserva => reserva.codigoMesaReserva !== codigoMesaReserva);\n        updateReservas(updatedReservas);\n        console.log(\"Reserva eliminada:\", codigoMesaReserva);\n        return updatedReservas;\n      });\n    } catch (error) {\n      console.error(\"Error eliminando la reserva:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      reservas,\n      addReserva,\n      removeReserva\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"ntVjLrMyc4ijMgW0rF7g22NNfeM=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","reservas","setReservas","updateCart","items","Array","isArray","Error","localStorage","setItem","JSON","stringify","error","console","updateReservas","reservasList","addToCart","item","prevCartItems","existingItemIndex","findIndex","cartItem","idAlimento","updatedItems","updatedItem","quantity","slice","newItem","log","removeFromCart","itemId","quantityToRemove","reduce","acc","newQuantity","push","addReserva","reserva","prevReservas","existingReservaIndex","r","codigoMesaReserva","updatedReservas","updatedReserva","cantidadPersonas","removeReserva","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Proyecto/Front/src/components/cart/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n    const [cartItems, setCartItems] = useState([]);\n    const [reservas, setReservas] = useState([]);\n\n    const updateCart = (items) => {\n        try {\n            if (!Array.isArray(items)) {\n                throw new Error(\"El carrito debe ser un array.\");\n            }\n            setCartItems(items);\n            localStorage.setItem('cartItems', JSON.stringify(items));\n        } catch (error) {\n            console.error(\"Error actualizando el carrito:\", error);\n        }\n    };\n\n    const updateReservas = (reservasList) => {\n        try {\n            if (!Array.isArray(reservasList)) {\n                throw new Error(\"Las reservas deben ser un array.\");\n            }\n            setReservas(reservasList);\n            localStorage.setItem('reservas', JSON.stringify(reservasList));\n        } catch (error) {\n            console.error(\"Error actualizando las reservas:\", error);\n        }\n    };\n\n    const addToCart = (item) => {\n        try {\n            setCartItems((prevCartItems) => {\n                const existingItemIndex = prevCartItems.findIndex(cartItem => cartItem.idAlimento === item.idAlimento);\n                let updatedItems;\n\n                if (existingItemIndex !== -1) {\n                    const updatedItem = {\n                        ...prevCartItems[existingItemIndex],\n                        quantity: prevCartItems[existingItemIndex].quantity + item.quantity\n                    };\n                    updatedItems = [\n                        ...prevCartItems.slice(0, existingItemIndex),\n                        updatedItem,\n                        ...prevCartItems.slice(existingItemIndex + 1)\n                    ];\n                } else {\n                    const newItem = { ...item, quantity: item.quantity };\n                    updatedItems = [...prevCartItems, newItem];\n                }\n\n                updateCart(updatedItems);\n                console.log(\"Item added to cart:\", item);\n                return updatedItems;\n            });\n        } catch (error) {\n            console.error(\"Error agregando al carrito:\", error);\n        }\n    };\n\n    const removeFromCart = (itemId, quantityToRemove) => {\n        try {\n            setCartItems((prevCartItems) => {\n                const updatedItems = prevCartItems.reduce((acc, item) => {\n                    if (item.idAlimento === itemId) {\n                        const newQuantity = item.quantity - quantityToRemove;\n                        if (newQuantity > 0) {\n                            acc.push({ ...item, quantity: newQuantity });\n                        }\n                    } else {\n                        acc.push(item);\n                    }\n                    return acc;\n                }, []);\n\n                updateCart(updatedItems);\n                console.log(\"Item removed from cart:\", itemId);\n                return updatedItems;\n            });\n        } catch (error) {\n            console.error(\"Error eliminando del carrito:\", error);\n        }\n    };\n\n    const addReserva = (reserva) => {\n        try {\n            setReservas((prevReservas) => {\n                const existingReservaIndex = prevReservas.findIndex(r => r.codigoMesaReserva === reserva.codigoMesaReserva);\n                let updatedReservas;\n\n                if (existingReservaIndex !== -1) {\n                    const updatedReserva = {\n                        ...prevReservas[existingReservaIndex],\n                        cantidadPersonas: prevReservas[existingReservaIndex].cantidadPersonas + reserva.cantidadPersonas\n                    };\n                    updatedReservas = [\n                        ...prevReservas.slice(0, existingReservaIndex),\n                        updatedReserva,\n                        ...prevReservas.slice(existingReservaIndex + 1)\n                    ];\n                } else {\n                    updatedReservas = [...prevReservas, reserva];\n                }\n\n                updateReservas(updatedReservas);\n                console.log(\"Reserva aÃ±adida:\", reserva);\n                return updatedReservas;\n            });\n        } catch (error) {\n            console.error(\"Error agregando la reserva:\", error);\n        }\n    };\n\n    const removeReserva = (codigoMesaReserva) => {\n        try {\n            setReservas((prevReservas) => {\n                const updatedReservas = prevReservas.filter(reserva => reserva.codigoMesaReserva !== codigoMesaReserva);\n                updateReservas(updatedReservas);\n                console.log(\"Reserva eliminada:\", codigoMesaReserva);\n                return updatedReservas;\n            });\n        } catch (error) {\n            console.error(\"Error eliminando la reserva:\", error);\n        }\n    };\n\n    return (\n        <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, reservas, addReserva, removeReserva }}>\n            {children}\n        </CartContext.Provider>\n    );\n};\n\nexport const useCart = () => {\n    return useContext(CartContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}