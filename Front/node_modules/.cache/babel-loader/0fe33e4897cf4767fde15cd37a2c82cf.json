{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Proyecto\\\\Front\\\\src\\\\pages\\\\Detalle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detalle = ({\n  correoCliente\n}) => {\n  _s();\n  const [reservas, setReservas] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true); // Estado de carga\n\n  useEffect(() => {\n    const fetchClienteId = async () => {\n      setLoading(true); // Inicia la carga\n      setError(''); // Reinicia el error\n\n      if (!correoCliente) {\n        setLoading(false);\n        setError('Correo del cliente no proporcionado.');\n        return;\n      }\n      try {\n        // Obtener ID del cliente\n        const response = await fetch(`https://federico-fazbear.onrender.com/api/cliente/correo/${correoCliente.trim().toLowerCase()}`);\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || 'Error al obtener el ID del cliente');\n        }\n        const data = await response.json();\n        console.log(\"Datos del cliente:\", data); // Verifica la respuesta\n\n        // Asegúrate de que el ID del cliente esté presente\n        if (data.id) {\n          await fetchReservas(data.id); // Llama a la función para obtener reservas con el ID\n        } else {\n          throw new Error('No se encontró el cliente asociado al correo');\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false); // Termina la carga\n      }\n    };\n    const fetchReservas = async clienteId => {\n      try {\n        const response = await fetch(`https://federico-fazbear.onrender.com/api/reservas/${clienteId}`); // Cambia esta URL a la que devuelva reservas por ID\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || 'Error al cargar las reservas');\n        }\n        const data = await response.json();\n        console.log(\"Reservas del cliente:\", data); // Verifica la respuesta\n\n        // Asegúrate de que 'data.reservas' contenga las reservas que esperas\n        if (data.reservas) {\n          setReservas(data.reservas);\n        } else {\n          throw new Error('No se encontraron reservas');\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    // Llama a la función solo si 'correoCliente' está definido\n    fetchClienteId();\n  }, [correoCliente]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando reservas...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 25\n  }, this); // Mensaje de carga\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reservas del Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), reservas.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reservas.map(reserva => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `Reserva ID: ${reserva.id}, Fecha: ${reserva.fecha}`\n      }, reserva.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay reservas disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Detalle, \"VS2HMwDBgAr2k4/7Mg4f64dp0uE=\");\n_c = Detalle;\nexport default Detalle;\nvar _c;\n$RefreshReg$(_c, \"Detalle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Detalle","correoCliente","_s","reservas","setReservas","error","setError","loading","setLoading","fetchClienteId","response","fetch","trim","toLowerCase","ok","errorData","json","Error","message","data","console","log","id","fetchReservas","clienteId","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","reserva","fecha","_c","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Proyecto/Front/src/pages/Detalle.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Detalle = ({ correoCliente }) => {\r\n    const [reservas, setReservas] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true); // Estado de carga\r\n\r\n    useEffect(() => {\r\n        const fetchClienteId = async () => {\r\n            setLoading(true); // Inicia la carga\r\n            setError(''); // Reinicia el error\r\n\r\n            if (!correoCliente) {\r\n                setLoading(false);\r\n                setError('Correo del cliente no proporcionado.');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // Obtener ID del cliente\r\n                const response = await fetch(`https://federico-fazbear.onrender.com/api/cliente/correo/${correoCliente.trim().toLowerCase()}`);\r\n                \r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(errorData.message || 'Error al obtener el ID del cliente');\r\n                }\r\n\r\n                const data = await response.json();\r\n                console.log(\"Datos del cliente:\", data); // Verifica la respuesta\r\n\r\n                // Asegúrate de que el ID del cliente esté presente\r\n                if (data.id) {\r\n                    await fetchReservas(data.id); // Llama a la función para obtener reservas con el ID\r\n                } else {\r\n                    throw new Error('No se encontró el cliente asociado al correo');\r\n                }\r\n            } catch (error) {\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false); // Termina la carga\r\n            }\r\n        };\r\n\r\n        const fetchReservas = async (clienteId) => {\r\n            try {\r\n                const response = await fetch(`https://federico-fazbear.onrender.com/api/reservas/${clienteId}`); // Cambia esta URL a la que devuelva reservas por ID\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(errorData.message || 'Error al cargar las reservas');\r\n                }\r\n\r\n                const data = await response.json();\r\n                console.log(\"Reservas del cliente:\", data); // Verifica la respuesta\r\n\r\n                // Asegúrate de que 'data.reservas' contenga las reservas que esperas\r\n                if (data.reservas) {\r\n                    setReservas(data.reservas);\r\n                } else {\r\n                    throw new Error('No se encontraron reservas');\r\n                }\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n\r\n        // Llama a la función solo si 'correoCliente' está definido\r\n        fetchClienteId();\r\n    }, [correoCliente]);\r\n\r\n    if (loading) return <div>Cargando reservas...</div>; // Mensaje de carga\r\n\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h3>Reservas del Cliente</h3>\r\n            {reservas.length > 0 ? (\r\n                <ul>\r\n                    {reservas.map((reserva) => (\r\n                        <li key={reserva.id}>{`Reserva ID: ${reserva.id}, Fecha: ${reserva.fecha}`}</li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No hay reservas disponibles.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detalle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}