{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\psche\\\\Desktop\\\\Federico-Fazbear\\\\Final\\\\Front\\\\src\\\\pages\\\\SubCartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubCartContext = /*#__PURE__*/createContext();\nexport const SubCartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    const storedCart = localStorage.getItem('cartItems'); // Cambiado a localStorage\n    return storedCart ? JSON.parse(storedCart) : [];\n  });\n  const updateSubCart = items => {\n    try {\n      if (!Array.isArray(items)) {\n        throw new Error(\"El carrito debe ser un array.\");\n      }\n      setCartItems(items);\n      localStorage.setItem('cartItems', JSON.stringify(items)); // Cambiado a localStorage\n    } catch (error) {\n      console.error(\"Error actualizando el subcarrito:\", error);\n    }\n  };\n  const addToSubCart = item => {\n    console.log(\"Intentando agregar al subcarrito:\", item); // Debug\n    try {\n      setCartItems(prevCartItems => {\n        const isReservation = item.codigoMesaReserva !== undefined;\n        let updatedItems;\n        if (isReservation) {\n          // Agrega el objeto `item` directamente, incluyendo los nuevos campos\n          updatedItems = [...prevCartItems, item];\n        } else {\n          const existingItemIndex = prevCartItems.findIndex(cartItem => cartItem.idAlimento === item.idAlimento);\n          if (existingItemIndex !== -1) {\n            const updatedItem = {\n              ...prevCartItems[existingItemIndex],\n              quantity: prevCartItems[existingItemIndex].quantity + item.quantity\n            };\n            updatedItems = [...prevCartItems.slice(0, existingItemIndex), updatedItem, ...prevCartItems.slice(existingItemIndex + 1)];\n          } else {\n            const newItem = {\n              ...item,\n              quantity: item.quantity\n            };\n            updatedItems = [...prevCartItems, newItem];\n          }\n        }\n        updateSubCart(updatedItems);\n        console.log(\"Subcarrito actualizado:\", updatedItems); // Debug\n        return updatedItems;\n      });\n    } catch (error) {\n      console.error(\"Error agregando al subcarrito:\", error);\n    }\n  };\n  const removeFromSubCart = (itemId, quantityToRemove) => {\n    console.log(\"Intentando eliminar del subcarrito:\", itemId); // Agregado para debug\n    try {\n      setCartItems(prevCartItems => {\n        const updatedItems = prevCartItems.reduce((acc, item) => {\n          if (item.idAlimento === itemId) {\n            const newQuantity = item.quantity - quantityToRemove;\n            if (newQuantity > 0) {\n              acc.push({\n                ...item,\n                quantity: newQuantity\n              });\n            }\n          } else if (item.codigoMesaReserva !== itemId) {\n            acc.push(item);\n          }\n          return acc;\n        }, []);\n        updateSubCart(updatedItems);\n        console.log(\"Subcarrito actualizado después de eliminar:\", updatedItems); // Agregado para debug\n        return updatedItems;\n      });\n    } catch (error) {\n      console.error(\"Error eliminando del subcarrito:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SubCartContext.Provider, {\n    value: {\n      cartItems,\n      addToSubCart,\n      removeFromSubCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(SubCartProvider, \"kNKDUODayNd9HjwHfbKzu8jDwo8=\");\n_c = SubCartProvider;\nexport const useSubCart = () => {\n  _s2();\n  return useContext(SubCartContext);\n};\n_s2(useSubCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SubCartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SubCartContext","SubCartProvider","children","_s","cartItems","setCartItems","storedCart","localStorage","getItem","JSON","parse","updateSubCart","items","Array","isArray","Error","setItem","stringify","error","console","addToSubCart","item","log","prevCartItems","isReservation","codigoMesaReserva","undefined","updatedItems","existingItemIndex","findIndex","cartItem","idAlimento","updatedItem","quantity","slice","newItem","removeFromSubCart","itemId","quantityToRemove","reduce","acc","newQuantity","push","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSubCart","_s2","$RefreshReg$"],"sources":["C:/Users/psche/Desktop/Federico-Fazbear/Final/Front/src/pages/SubCartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nexport const SubCartContext = createContext();\r\n\r\nexport const SubCartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState(() => {\r\n        const storedCart = localStorage.getItem('cartItems'); // Cambiado a localStorage\r\n        return storedCart ? JSON.parse(storedCart) : [];\r\n    });\r\n\r\n    const updateSubCart = (items) => {\r\n        try {\r\n            if (!Array.isArray(items)) {\r\n                throw new Error(\"El carrito debe ser un array.\");\r\n            }\r\n            setCartItems(items);\r\n            localStorage.setItem('cartItems', JSON.stringify(items)); // Cambiado a localStorage\r\n        } catch (error) {\r\n            console.error(\"Error actualizando el subcarrito:\", error);\r\n        }\r\n    };\r\n\r\n    const addToSubCart = (item) => {\r\n        console.log(\"Intentando agregar al subcarrito:\", item); // Debug\r\n        try {\r\n            setCartItems((prevCartItems) => {\r\n                const isReservation = item.codigoMesaReserva !== undefined;\r\n                let updatedItems;\r\n\r\n                if (isReservation) {\r\n                    // Agrega el objeto `item` directamente, incluyendo los nuevos campos\r\n                    updatedItems = [...prevCartItems, item];\r\n                } else {\r\n                    const existingItemIndex = prevCartItems.findIndex(cartItem => cartItem.idAlimento === item.idAlimento);\r\n                    if (existingItemIndex !== -1) {\r\n                        const updatedItem = {\r\n                            ...prevCartItems[existingItemIndex],\r\n                            quantity: prevCartItems[existingItemIndex].quantity + item.quantity\r\n                        };\r\n                        updatedItems = [\r\n                            ...prevCartItems.slice(0, existingItemIndex),\r\n                            updatedItem,\r\n                            ...prevCartItems.slice(existingItemIndex + 1)\r\n                        ];\r\n                    } else {\r\n                        const newItem = { ...item, quantity: item.quantity };\r\n                        updatedItems = [...prevCartItems, newItem];\r\n                    }\r\n                }\r\n\r\n                updateSubCart(updatedItems);\r\n                console.log(\"Subcarrito actualizado:\", updatedItems); // Debug\r\n                return updatedItems;\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error agregando al subcarrito:\", error);\r\n        }\r\n    };\r\n\r\n    const removeFromSubCart = (itemId, quantityToRemove) => {\r\n        console.log(\"Intentando eliminar del subcarrito:\", itemId); // Agregado para debug\r\n        try {\r\n            setCartItems((prevCartItems) => {\r\n                const updatedItems = prevCartItems.reduce((acc, item) => {\r\n                    if (item.idAlimento === itemId) {\r\n                        const newQuantity = item.quantity - quantityToRemove;\r\n                        if (newQuantity > 0) {\r\n                            acc.push({ ...item, quantity: newQuantity });\r\n                        }\r\n                    } else if (item.codigoMesaReserva !== itemId) {\r\n                        acc.push(item);\r\n                    }\r\n                    return acc;\r\n                }, []);\r\n\r\n                updateSubCart(updatedItems);\r\n                console.log(\"Subcarrito actualizado después de eliminar:\", updatedItems); // Agregado para debug\r\n                return updatedItems;\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error eliminando del subcarrito:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SubCartContext.Provider value={{ cartItems, addToSubCart, removeFromSubCart }}>\r\n            {children}\r\n        </SubCartContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useSubCart = () => {\r\n    return useContext(SubCartContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}