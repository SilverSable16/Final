{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\psche\\\\Desktop\\\\Federico-Fazbear\\\\Final\\\\Front\\\\src\\\\pages\\\\SuccessPage.js\",\n  _s = $RefreshSig$();\n// src/pages/SuccessPage.js\n\nimport React, { useEffect, useContext } from 'react';\nimport { CartContext } from '../components/cart/CartContext';\nimport axios from 'axios';\n//import clientId from '../pages/UserProfile.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuccessPage = () => {\n  _s();\n  const {\n    cartItems,\n    clearCart\n  } = useContext(CartContext);\n  useEffect(() => {\n    const response = fetch(`https://federico-fazbear.onrender.com/api/cliente/${storedEmail}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      const errorData = response.json();\n      throw new Error(errorData.message || 'Error al obtener los datos del cliente');\n    }\n    const data = response.json();\n    const clientId = data.idCliente;\n\n    // Datos necesarios (idealmente deberían obtenerse del usuario autenticado)\n    const idCliente = clientId;\n    const idEmpleado = null;\n    const idSucursal = 1;\n    const correo = localStorage.getItem('correoCliente');\n\n    // Cálculo del total\n    const total = cartItems.reduce((acc, item) => acc + item.precio * (item.quantity || 1), 0);\n    if (isNaN(idCliente) || isNaN(idSucursal) || isNaN(total)) {\n      console.error(\"Uno de los valores numéricos no es válido:\", {\n        idCliente,\n        idSucursal,\n        total\n      });\n      return;\n    }\n\n    // Preparar el array de productos para el backend\n    const productos = cartItems.map(item => ({\n      idAlimento: item.idAlimento,\n      //costo: item.precio * (item.quantity || 1),\n      costo: item.quantity,\n      lugarCompra: 'Linea',\n      noReserva: item.noReserva || null\n    }));\n\n    // Función para realizar la compra\n    const realizarCompra = async () => {\n      const body = {\n        idCliente,\n        idEmpleado,\n        idSucursal,\n        productos,\n        total,\n        correo\n      };\n      try {\n        console.log(\"Datos de la compra a enviar:\", body);\n        const response = await axios.post('https://federico-fazbear.onrender.com/api/carrito/compras', body);\n        console.log(\"Respuesta del servidor:\", response.data);\n        clearCart(); // Limpiar el carrito después de la compra\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error al registrar la compra:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    realizarCompra();\n  }, [cartItems, clearCart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pago Exitoso\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Gracias por tu compra. Se ha generado una factura.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(SuccessPage, \"mFCCLjM/aPGPN0JZqSpthvC3dq4=\");\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["React","useEffect","useContext","CartContext","axios","jsxDEV","_jsxDEV","SuccessPage","_s","cartItems","clearCart","response","fetch","storedEmail","headers","token","ok","errorData","json","Error","message","data","clientId","idCliente","idEmpleado","idSucursal","correo","localStorage","getItem","total","reduce","acc","item","precio","quantity","isNaN","console","error","productos","map","idAlimento","costo","lugarCompra","noReserva","realizarCompra","body","log","post","_error$response","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/psche/Desktop/Federico-Fazbear/Final/Front/src/pages/SuccessPage.js"],"sourcesContent":["// src/pages/SuccessPage.js\r\n\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { CartContext } from '../components/cart/CartContext';\r\nimport axios from 'axios';\r\n//import clientId from '../pages/UserProfile.jsx';\r\n\r\n\r\nconst SuccessPage = () => {\r\n    const { cartItems, clearCart } = useContext(CartContext);\r\n\r\n    useEffect(() => {\r\n\r\n        const response = fetch(`https://federico-fazbear.onrender.com/api/cliente/${storedEmail}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = response.json();\r\n            throw new Error(errorData.message || 'Error al obtener los datos del cliente');\r\n        }\r\n\r\n        const data = response.json();\r\n        const clientId = (data.idCliente);\r\n\r\n        // Datos necesarios (idealmente deberían obtenerse del usuario autenticado)\r\n        const idCliente = clientId;\r\n        const idEmpleado = null;\r\n        const idSucursal = 1;\r\n        const correo = localStorage.getItem('correoCliente');\r\n\r\n        // Cálculo del total\r\n        const total = cartItems.reduce((acc, item) => acc + item.precio * (item.quantity || 1), 0);\r\n\r\n        if (isNaN(idCliente) || isNaN(idSucursal) || isNaN(total)) {\r\n            console.error(\"Uno de los valores numéricos no es válido:\", { idCliente, idSucursal, total });\r\n            return;\r\n        }\r\n\r\n        // Preparar el array de productos para el backend\r\n        const productos = cartItems.map(item => ({\r\n            idAlimento: item.idAlimento,\r\n            //costo: item.precio * (item.quantity || 1),\r\n            costo: item.quantity,\r\n            lugarCompra: 'Linea',\r\n            noReserva: item.noReserva || null,\r\n        }));\r\n\r\n        // Función para realizar la compra\r\n        const realizarCompra = async () => {\r\n            const body = {\r\n                idCliente,\r\n                idEmpleado,\r\n                idSucursal,\r\n                productos,\r\n                total,\r\n                correo\r\n            };\r\n\r\n            try {\r\n                console.log(\"Datos de la compra a enviar:\", body);\r\n                const response = await axios.post('https://federico-fazbear.onrender.com/api/carrito/compras', body);\r\n                \r\n                console.log(\"Respuesta del servidor:\", response.data);\r\n                clearCart();  // Limpiar el carrito después de la compra\r\n            } catch (error) {\r\n                console.error(\"Error al registrar la compra:\", error.response?.data || error.message);\r\n            }\r\n        };\r\n\r\n        realizarCompra();\r\n    }, [cartItems, clearCart]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Pago Exitoso</h1>\r\n            <p>Gracias por tu compra. Se ha generado una factura.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}