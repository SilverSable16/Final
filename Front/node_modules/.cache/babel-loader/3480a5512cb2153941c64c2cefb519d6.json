{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aponc\\\\OneDrive\\\\Desktop\\\\Proyecto\\\\Front\\\\src\\\\pages\\\\Reservas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport axios from 'axios';\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport MesaCard from './MesaCard';\nimport './reservas.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MesasPack = () => {\n  _s();\n  const [sucursal, setSucursal] = useState(1);\n  const [mesas, setMesas] = useState([]);\n  const [fechaConsulta, setFechaConsulta] = useState('');\n  const [horaInicio, setHoraInicio] = useState('');\n  const [horaFin, setHoraFin] = useState('');\n  const fetchMesas = async () => {\n    try {\n      // Obtener mesas por sucursal seleccionada usando la API proporcionada\n      const responseMesas = await axios.get(`https://federico-fazbear.onrender.com/api/mesa/sucursal/${sucursal}`);\n      let mesasData = responseMesas.data.mesas;\n\n      // Verificar disponibilidad de las mesas llamando a la API de verificación\n      if (fechaConsulta && horaInicio && horaFin) {\n        const responseDisponibilidad = await axios.post('https://federico-fazbear.onrender.com/api/mesasdisponibles/verificar', {\n          fechaConsulta: fechaConsulta,\n          horaInicio: horaInicio,\n          horaFin: horaFin\n        });\n        const mesasOcupadas = responseDisponibilidad.data.result.map(m => m.codigo_mesa);\n\n        // Actualizar el estado de las mesas según su disponibilidad\n        mesasData = mesasData.map(mesa => ({\n          ...mesa,\n          disponible: !mesasOcupadas.includes(mesa.codigo_mesa)\n        }));\n      }\n      setMesas(mesasData);\n    } catch (error) {\n      console.error(\"Error fetching mesas or checking availability:\", error);\n    }\n  };\n\n  // Usar el botón para realizar la consulta de mesas\n  const handleBuscarMesas = () => {\n    fetchMesas();\n  };\n  useEffect(() => {\n    fetchMesas(); // Cargar mesas al inicio\n  }, [sucursal]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            className: \"text-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mesas__title\",\n              children: \"Mesas Disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            className: \"text-center mb-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filters\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => setSucursal(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"Sucursal Central\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"Sucursal Norte\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: fechaConsulta,\n                onChange: e => setFechaConsulta(e.target.value),\n                placeholder: \"Fecha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: horaInicio,\n                onChange: e => setHoraInicio(e.target.value),\n                placeholder: \"Hora de Inicio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: horaFin,\n                onChange: e => setHoraFin(e.target.value),\n                placeholder: \"Hora de Fin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: handleBuscarMesas,\n                children: \"Buscar Mesas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: mesas.map(mesa => /*#__PURE__*/_jsxDEV(MesaCard, {\n                mesa: mesa\n              }, mesa.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MesasPack, \"gZmFTzwdphtbM2gTjJUhmyvMVFI=\");\n_c = MesasPack;\nexport default MesasPack;\nvar _c;\n$RefreshReg$(_c, \"MesasPack\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","axios","Header","Footer","MesaCard","jsxDEV","_jsxDEV","Fragment","_Fragment","MesasPack","_s","sucursal","setSucursal","mesas","setMesas","fechaConsulta","setFechaConsulta","horaInicio","setHoraInicio","horaFin","setHoraFin","fetchMesas","responseMesas","get","mesasData","data","responseDisponibilidad","post","mesasOcupadas","result","map","m","codigo_mesa","mesa","disponible","includes","error","console","handleBuscarMesas","children","fileName","_jsxFileName","lineNumber","columnNumber","lg","className","onChange","e","target","value","type","placeholder","color","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/aponc/OneDrive/Desktop/Proyecto/Front/src/pages/Reservas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport axios from 'axios';\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport MesaCard from './MesaCard';\nimport './reservas.css';\n\nconst MesasPack = () => {\n    const [sucursal, setSucursal] = useState(1);\n    const [mesas, setMesas] = useState([]);\n    const [fechaConsulta, setFechaConsulta] = useState('');\n    const [horaInicio, setHoraInicio] = useState('');\n    const [horaFin, setHoraFin] = useState('');\n\n    const fetchMesas = async () => {\n        try {\n            // Obtener mesas por sucursal seleccionada usando la API proporcionada\n            const responseMesas = await axios.get(`https://federico-fazbear.onrender.com/api/mesa/sucursal/${sucursal}`);\n            let mesasData = responseMesas.data.mesas;\n\n            // Verificar disponibilidad de las mesas llamando a la API de verificación\n            if (fechaConsulta && horaInicio && horaFin) {\n                const responseDisponibilidad = await axios.post('https://federico-fazbear.onrender.com/api/mesasdisponibles/verificar', {\n                    fechaConsulta: fechaConsulta,\n                    horaInicio: horaInicio,\n                    horaFin: horaFin\n                });\n\n                const mesasOcupadas = responseDisponibilidad.data.result.map(m => m.codigo_mesa);\n\n                // Actualizar el estado de las mesas según su disponibilidad\n                mesasData = mesasData.map(mesa => ({\n                    ...mesa,\n                    disponible: !mesasOcupadas.includes(mesa.codigo_mesa)\n                }));\n            }\n\n            setMesas(mesasData);\n        } catch (error) {\n            console.error(\"Error fetching mesas or checking availability:\", error);\n        }\n    };\n\n    // Usar el botón para realizar la consulta de mesas\n    const handleBuscarMesas = () => {\n        fetchMesas();\n    };\n\n    useEffect(() => {\n        fetchMesas(); // Cargar mesas al inicio\n    }, [sucursal]);\n\n    return (\n        <>\n            <Header />\n            <section>\n                <Container>\n                    <Row>\n                        <Col lg=\"12\" className=\"text-center mb-4\">\n                            <h3 className=\"mesas__title\">Mesas Disponibles</h3>\n                        </Col>\n                        <Col lg=\"12\" className=\"text-center mb-5\">\n                            <div className=\"filters\">\n                                <select onChange={(e) => setSucursal(e.target.value)}>\n                                    <option value=\"1\">Sucursal Central</option>\n                                    <option value=\"2\">Sucursal Norte</option>\n                                </select>\n                                <input\n                                    type=\"date\"\n                                    value={fechaConsulta}\n                                    onChange={(e) => setFechaConsulta(e.target.value)}\n                                    placeholder=\"Fecha\"\n                                />\n                                <input\n                                    type=\"time\"\n                                    value={horaInicio}\n                                    onChange={(e) => setHoraInicio(e.target.value)}\n                                    placeholder=\"Hora de Inicio\"\n                                />\n                                <input\n                                    type=\"time\"\n                                    value={horaFin}\n                                    onChange={(e) => setHoraFin(e.target.value)}\n                                    placeholder=\"Hora de Fin\"\n                                />\n                                <Button color=\"primary\" onClick={handleBuscarMesas}>\n                                    Buscar Mesas\n                                </Button>\n                            </div>\n                        </Col>\n                        <Col lg=\"12\">\n                            <div className=\"map-container\">\n                                {mesas.map(mesa => (\n                                    <MesaCard\n                                        key={mesa.id}\n                                        mesa={mesa}\n                                    />\n                                ))}\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n            <Footer />\n        </>\n    );\n}\n\nexport default MesasPack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}